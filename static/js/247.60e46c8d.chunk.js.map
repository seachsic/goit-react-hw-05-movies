{"version":3,"file":"static/js/247.60e46c8d.chunk.js","mappings":"8LA0CA,UAjCa,WACT,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeR,GACbS,MAAK,SAAAC,GACHN,EAAQM,EAASP,KAChB,IACAQ,OAAM,SAAAN,GACHC,EAASD,GACTO,QAAQC,IAAIR,EACf,GACR,GAAE,CAACL,KAGA,4BACMG,EAAKW,SAAU,6CAAqBT,MAClC,wBACKF,GAAQA,EAAKY,KAAI,SAAAZ,GAAI,OAClB,2BACI,0BAAK,gBAAMa,IAAKb,EAAKc,aAAL,UAzBvB,mCAyBuB,OAAsCd,EAAKc,cAAiB,sCAAuCC,MAAM,MAAMC,IAAKhB,EAAKiB,UACzI,wBAAKjB,EAAKiB,QACV,uCAAejB,EAAKkB,eAHflB,EAAKH,GADI,QAUzC,C,oKCjCKsB,EAAW,gCACXC,EAAa,mCAEbC,EAAsB,WAAe,IAAdC,EAAa,uDAAN,EAC/B,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,sCAA0CC,EAA1C,iBAA6DE,IACpEhB,MAAK,SAAAC,GACC,OAAIA,EAASiB,GACFjB,EAASkB,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,yDACzB,GACZ,EAGKC,EAAoB,SAACC,GAAyB,IAAdR,EAAa,uDAAN,EACxC,OAAOC,MAAM,GAAD,OAAIJ,EAAJ,gCAAoCC,EAApC,gCAAsEE,EAAtE,sCAAwGQ,IAC5GxB,MAAK,SAAAC,GACF,OAAIA,EAASiB,GACFjB,EAASkB,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,6CAAgD,EAAKG,MAAMD,YACpF,GACZ,EAEKE,EAAkB,SAACnC,GACpB,OAAO0B,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBtB,EAArB,oBAAmCuB,EAAnC,oBACJd,MAAK,SAAAC,GACF,OAAIA,EAASiB,GACFjB,EAASkB,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,0BACzB,GACZ,EAEKK,EAAoB,SAACC,GACvB,OAAOX,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBe,EAArB,4BAAkDd,EAAlD,oBACPd,MAAK,SAAAC,GACF,OAAIA,EAASiB,GACFjB,EAASkB,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,sBACzB,GACR,EAcKvB,EAAiB,SAAC8B,GACnB,OAAOZ,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBgB,EAArB,4BAAkDf,IACtDd,MAAK,SAAAC,GACF,OAAIA,EAASiB,GACFjB,EAASkB,OAGbC,QAAQC,OAAO,IAAIC,MAAJ,mBACzB,GACZ,C","sources":["components/Cast/Cast.jsx","services/Api.js"],"sourcesContent":["// import { } from './Cast.styled';\nimport { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\n\nimport { fetchMovieCast } from 'services/Api';\n\nconst baseImageURL = \"https://image.tmdb.org/t/p/w500\";\n\n\nconst Cast = () => {\n    const { id } = useParams();\n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        fetchMovieCast(id)\n         .then(response => {\n            setCast(response.cast);\n            })\n            .catch(error => {\n                setError(error);\n                console.log(error);\n            })\n    }, [id]);\n    \n    return (\n        <div>\n            {!cast.length && <div>No reviews yet {error}</div>}\n                <ul>\n                    {cast && cast.map(cast => \n                        <li key={cast.id}>\n                            <div><img  src={cast.profile_path ? `${baseImageURL}${cast.profile_path}` : \"https://via.placeholder.com/200x300\"} width=\"200\" alt={cast.name} /></div>\n                            <h2>{cast.name}</h2>\n                            <p>Character: {cast.character}</p>\n                        </li>\n                    ) }\n                </ul>\n        </div>\n    );\n}\n\n\nexport default Cast; ","/* /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n/search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n/movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n/movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n/movies/get-movie-reviews запит оглядів для сторінки кінофільму. */\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst GLOBAL_KEY = 'df88ba4f44a5ed712dd0a71f1b3d877c';\n\nconst fetchTrendingMovies = (page = 1) => {\n     return fetch(`${BASE_URL}trending/movie/day?api_key=${GLOBAL_KEY}&page=${page}`)\n         .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n\n                return Promise.reject(new Error(`Sorry, something went wrong. Please, try againe later`))\n            })\n}\n\n\nconst fetchSearchMovies = (inputName, page = 1) => {\n     return fetch(`${BASE_URL}search/movie?api_key=${GLOBAL_KEY}&language=en-US&page=${page}&include_adult=false&query=${inputName}`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n\n                return Promise.reject(new Error(`Oopps...no movies with this name - ${this.props.inputName}`))\n            })\n}\n\nconst fetchMoviesInfo = (id) => {\n     return fetch(`${BASE_URL}movie/${id}?api_key=${GLOBAL_KEY}&language=en-US`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n\n                return Promise.reject(new Error(`Oopps...no movies info`))\n            })\n}\n\nconst fetchMovieReviews = (review_id) => {\n    return fetch(`${BASE_URL}movie/${review_id}/reviews?api_key=${GLOBAL_KEY}&language=en-US`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n\n            return Promise.reject(new Error(`Oopps...no reviews`))\n        })\n}\n\n// const fetchMovieCast = (person_id) => {\n//      return fetch(`${BASE_URL}person/${person_id}?api_key=${GLOBAL_KEY}&language=en-US`)\n//             .then(response => {\n//                 if (response.ok) {\n//                     return response.json();\n//                 }\n\n//                 return Promise.reject(new Error(`Oopps...no movies with this name - ${this.props.inputName}`))\n//             })\n// }\n\n\nconst fetchMovieCast = (person_id) => {\n     return fetch(`${BASE_URL}movie/${person_id}/credits?api_key=${GLOBAL_KEY}`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n\n                return Promise.reject(new Error(`Oopps...no cast`))\n            })\n}\n\n\n\nexport { fetchTrendingMovies, fetchSearchMovies, fetchMoviesInfo, fetchMovieReviews, fetchMovieCast};\n"],"names":["id","useParams","useState","cast","setCast","error","setError","useEffect","fetchMovieCast","then","response","catch","console","log","length","map","src","profile_path","width","alt","name","character","BASE_URL","GLOBAL_KEY","fetchTrendingMovies","page","fetch","ok","json","Promise","reject","Error","fetchSearchMovies","inputName","props","fetchMoviesInfo","fetchMovieReviews","review_id","person_id"],"sourceRoot":""}
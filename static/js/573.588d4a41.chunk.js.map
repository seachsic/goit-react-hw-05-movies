{"version":3,"file":"static/js/573.588d4a41.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAEVC,EAAQ,mCAAG,oGACGF,EAAAA,EAAAA,IAAA,qCAAwCC,IAD3C,cACdE,EADc,yBAEbA,EAASC,MAFI,2CAAH,qDAKRC,EAAQ,mCAAG,WAAMC,GAAN,uFACGN,EAAAA,EAAAA,IAAA,+BAAkCC,EAAlC,iCAAkEK,EAAlE,gCADH,cACdH,EADc,yBAEbA,EAASC,MAFI,2CAAH,sDAKRG,EAAU,mCAAG,WAAMC,GAAN,uFACCR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCP,EAAtC,oBADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKVK,EAAI,mCAAG,WAAMD,GAAN,uFACOR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,oBADP,cACVE,EADU,yBAETA,EAASC,KAAKM,MAFL,2CAAH,sDAKJC,EAAU,mCAAG,WAAMH,GAAN,uFACCR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,4BAA8CP,EAA9C,2BADD,cAChBE,EADgB,yBAEfA,EAASC,MAFM,2CAAH,qD,0ICxBVQ,EAAYC,EAAAA,GAAAA,IAAH,4SAaTC,EAAOD,EAAAA,GAAAA,KAAH,8C,kBC2BjB,EApCa,WACT,IACA,ECLmB,SAAAL,GACnB,OAA4BO,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACFV,IACAC,EAAAA,EAAAA,IAAKD,GAASW,MAAK,SAAAhB,GACfc,GAAU,OAAId,GACjB,GACR,GAAE,CAACK,IAEG,CAAEQ,OAAAA,EACZ,CDNsBI,EADCC,EAAAA,EAAAA,MAAZb,SACAQ,EAAR,EAAQA,OAER,OAAKA,GAGD,SAACJ,EAAD,UACCI,EAAOM,KAAI,SAAAC,GACR,OACA,4BACI,gBACAC,IACID,EAAME,aAAN,0CACqCF,EAAME,cAD3C,+EAIJC,IAAKH,EAAMI,KACXC,MAAM,MACNC,OAAO,SAEP,wBACA,SAACf,EAAD,UAAOS,EAAMI,UAEb,gCAAQJ,EAAMO,eAdRP,EAAMQ,GAiBnB,OAvBe,SAACC,EAAA,EAAD,GA0BvB,C","sources":["API/API.jsx","components/Cast/cast.styled.js","components/Cast/Cast.jsx","hooks/useCast.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = 'cc6ba0cdbd17008bd83d850b6f4ce8a8';\n\nexport const Trending = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport const getQuery = async query => {\n    const response = await axios.get(`search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false&page=1`);\n    return response.data;\n};\n\nexport const getMovieID = async movieId => {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n    return response.data;\n};\n\nexport const Cast = async movieId => {\n    const response = await axios.get(`movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n    return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n    const response = await axios.get(`movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    return response.data;\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    display: grid;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));\n    grid-gap: 26px;\n    margin-top: 0;\n    margin-bottom: 0;\n    padding: 0;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const Span = styled.span`\n    font-weight:600;\n`;","import { useCast } from 'hooks/useCast';\nimport { useParams } from 'react-router-dom';\nimport { Container, Span } from './cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const { actors } = useCast(movieId);\n\n    if (!actors) return <Loader />;\n        // console.log(movieId);\n    return (\n        <Container>\n        {actors.map(actor => {\n            return (\n            <div key={actor.id}>\n                <img\n                src={\n                    actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                    : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n                }\n                alt={actor.name}\n                width=\"180\"\n                height=\"250\"\n                />\n                <p>\n                <Span>{actor.name}</Span>\n                </p>\n                <p>As: {actor.character}</p>\n            </div>\n            );\n        })}\n        </Container>\n    );\n};\n\nCast.propTypes = {\nmovieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;","import { Cast } from \"API/API\";\nimport { useEffect, useState } from \"react\";\n\nexport const useCast = movieId => {\n    const [actors, setActors] = useState(null);\n\n    useEffect(() => {\n        if (movieId)\n            Cast(movieId).then(response => {\n                setActors([...response]);\n            });\n    }, [movieId]);\n\n    return { actors };\n};"],"names":["axios","API_KEY","Trending","response","data","getQuery","query","getMovieID","movieId","Cast","cast","getReviews","Container","styled","Span","useState","actors","setActors","useEffect","then","useCast","useParams","map","actor","src","profile_path","alt","name","width","height","character","id","Loader"],"sourceRoot":""}